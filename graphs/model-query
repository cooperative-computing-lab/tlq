#! /usr/bin/env perl

use Error qw(:try);
use Error::Simple;
use Getopt::Long qw(:config no_ignore_case);
use strict;

my $usage = "Query Cost Modeling Options:

Required:

Optional:
    --datasize,-d    <integer>   Set total size of log data (in MB).
    --netspeed,-n    <integer>   Set the transfer speed (in MB/s).
    --readspeed, -r  <integer>   Set the local read speed (in MB/s).

    --help                  Display this message.

Example Usage:

    perl model-query --netspeed 100 --datasize 1000

";

my %OPT;
try {
    GetOptions(
        "datasize=s" => \$OPT{datasize},
        "netspeed=s" => \$OPT{netspeed},
        "readspeed=s" => \$OPT{readspeed},
        "help|?" => sub { print $usage; exit(0); },
    );
}
catch Error::Simple with {
    my $E = shift;
    print STDERR $E->{-text};
    die "Failed to parse command line options.\n";
};

my $datasize = $OPT{datasize};
my $netspeed = $OPT{netspeed};
my $readspeed = $OPT{readspeed};
if(!$datasize) { $datasize = 10000; }
if(!$netspeed) { $netspeed = 100; }
if(!$readspeed) { $readspeed = 100; }

my $netcost = 1;
my $totalsize = 0;
my $totaltransfer = 0;
my $totalquery = 0;

my $i = 0;
while($i <= $datasize) {
    my $onepercent = (2 * $netcost) + ($i / $readspeed) + (($i * 0.01) / $netspeed);
    my $tenpercent = (2 * $netcost) + ($i / $readspeed) + (($i * 0.10) / $netspeed);
    $totaltransfer = $netcost + ($i / $netspeed) + ($i / $readspeed);
    $totalquery = (2 * $netcost) + ($i / $readspeed) + ($i / $netspeed);
    print(STDOUT "$i $totaltransfer $totalquery $tenpercent $onepercent\n");
    $i++;
}

exit(0);

sub print_help {
    print(STDERR $usage);
    exit(1);
}

# vim: tabstop=8 shiftwidth=4 softtabstop=4 expandtab shiftround autoindent
